{"ast":null,"code":"var _jsxFileName = \"/Users/nicktorrens/Documents/Grad Cert in Web Development 2024/Portfolio Applications/The Good Weekend Quiz/gwq-frontend/src/pages/Leaderboard.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../components/AuthContext';\nimport { AgGridReact } from 'ag-grid-react';\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-alpine.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Leaderboard() {\n  _s();\n  const [leagues, setLeagues] = useState([]);\n  const [selectedLeague, setSelectedLeague] = useState();\n  const [scoreData, setScoreData] = useState({});\n  const {\n    userDetails\n  } = useContext(AuthContext);\n  const fetchLeagues = async () => {\n    const leaguesQuery = await fetch(`http://localhost:5010/profile/display-leagues?userId=${userDetails.id}`);\n    const playerLeagues = await leaguesQuery.json();\n    console.log(playerLeagues);\n    setLeagues(playerLeagues);\n  };\n  useEffect(() => {\n    fetchLeagues();\n  }, [userDetails.id]);\n  const handleLeagueChange = event => {\n    setSelectedLeague(event.target.value);\n  };\n  const fetchLeagueData = async () => {\n    const leagueDataQuery = await fetch(`http://localhost:5010/data/scores?leagueId=${selectedLeague}`);\n    const scores = await leagueDataQuery.json();\n    console.log(scores);\n    const totalScores = {};\n    scores.forEach(entry => {\n      if (!totalScores[entry.user_id]) {\n        totalScores[entry.user_id] = {\n          name: entry.player_name,\n          totalScore: 0\n        };\n      }\n      totalScores[entry.user_id].totalScore += entry.score;\n    });\n    console.log(totalScores);\n    setScoreData(totalScores);\n  };\n  useEffect(() => {\n    fetchLeagueData();\n  }, [selectedLeague]);\n  console.log(selectedLeague);\n  const AGGridTable = () => {\n    const columnDefs = [{\n      field: \"name\",\n      headerName: \"Team Name\",\n      flex: 1\n    }, {\n      field: \"score\",\n      headerName: \"Score\",\n      flex: 1,\n      sortable: true\n    }];\n    const rowData = [scoreData];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"LEADERBOARD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: handleLeagueChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select a league--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), leagues.map(league => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: league.id,\n          children: league.league_name\n        }, league.index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 46\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AgGridReact, {\n        columnDefs: columnDefs,\n        rowData: scoreData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(Leaderboard, \"B1nJ4M6HmA0LUp7TEYsyYDXw3/k=\");\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["useState","useEffect","useContext","AuthContext","AgGridReact","jsxDEV","_jsxDEV","Leaderboard","_s","leagues","setLeagues","selectedLeague","setSelectedLeague","scoreData","setScoreData","userDetails","fetchLeagues","leaguesQuery","fetch","id","playerLeagues","json","console","log","handleLeagueChange","event","target","value","fetchLeagueData","leagueDataQuery","scores","totalScores","forEach","entry","user_id","name","player_name","totalScore","score","AGGridTable","columnDefs","field","headerName","flex","sortable","rowData","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","league","league_name","index","_c","$RefreshReg$"],"sources":["/Users/nicktorrens/Documents/Grad Cert in Web Development 2024/Portfolio Applications/The Good Weekend Quiz/gwq-frontend/src/pages/Leaderboard.jsx"],"sourcesContent":["import { useState, useEffect, useContext} from 'react';\nimport { AuthContext } from '../components/AuthContext';\nimport { AgGridReact } from 'ag-grid-react';\nimport \"ag-grid-community/styles/ag-grid.css\";\nimport \"ag-grid-community/styles/ag-theme-alpine.css\";\n\n\nfunction Leaderboard (){\n\n    const [leagues, setLeagues] = useState([]);\n    const [selectedLeague, setSelectedLeague] = useState();\n    const [scoreData, setScoreData] = useState({});\n\n    const { userDetails } = useContext(AuthContext);\n\n    \n    const fetchLeagues = async () => {\n    const leaguesQuery = await fetch(`http://localhost:5010/profile/display-leagues?userId=${userDetails.id}`) \n    const playerLeagues = await leaguesQuery.json();\n\n        console.log(playerLeagues);\n        setLeagues(playerLeagues);\n    }\n\n\n    useEffect(() => {\n        fetchLeagues()\n    }, [userDetails.id])\n\n    const handleLeagueChange = (event) => {\n        setSelectedLeague(event.target.value)\n    }\n\n    const fetchLeagueData = async () => {\n        const leagueDataQuery = await fetch(`http://localhost:5010/data/scores?leagueId=${selectedLeague}`);\n        const scores = await leagueDataQuery.json();\n        console.log(scores)\n\n        const totalScores = {};\n\n        scores.forEach(entry => {\n            if(!totalScores[entry.user_id]){\n                totalScores[entry.user_id] = { name: entry.player_name, totalScore: 0 };\n            }\n            totalScores[entry.user_id].totalScore += entry.score;\n        });\n        console.log(totalScores);\n        setScoreData(totalScores)\n    }\n\n    useEffect(() =>{\n            fetchLeagueData()\n        },[selectedLeague])\n\n    console.log(selectedLeague);\n\n    const AGGridTable = () => {\n        const columnDefs = [\n            {field: \"name\", headerName: \"Team Name\", flex: 1},\n            {field: \"score\", headerName: \"Score\", flex: 1, sortable: true}\n        ]\n        const rowData = [scoreData]\n    }\n\n\n\n\n\n    return(\n        <div>\n            <h1>LEADERBOARD</h1>\n            <div>\n                <select onChange={handleLeagueChange}>\n                    <option value='' >--Select a league--</option>\n                    {leagues.map((league) => <option key={league.index} value={league.id}>{league.league_name}</option>)}\n                </select>\n                <AgGridReact\n                    columnDefs={columnDefs}\n                    rowData={scoreData}\n                />\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Leaderboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}